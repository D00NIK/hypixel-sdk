/* tslint:disable */
/* eslint-disable */
/**
 * Hypixel Public API
 * # Introduction This is the official Hypixel API documentation. [Hypixel Website](https://hypixel.net/) - [GitHub Repo](https://github.com/HypixelDev/PublicAPI) - [API Help Forum](https://hypixel.net/forums/api-help.111/)  All use of the API must conform to the [API policies](https://developer.hypixel.net/policies), violation of these policies may lead to applications being revoked or users banned from the API. ## Limits API keys are limited to a maximum amount of requests per 5 minute intervals. These limits will depend on the type of application that the key is assigned to.  Endpoints which require the use of an API key will also respond with headers to assist with managing the rate limit: - \'RateLimit-Limit\' - The limit of requests per minute for the provided API key. - \'RateLimit-Remaining\' - The remaining amount of requests allowed for the current minute. - \'RateLimit-Reset\' - The amount of seconds until the next minute and the reset of the API key usages.  ## GameTypes | ID | Type Name      | Database Name | Clean Name           |  |----|----------------|---------------|----------------------|  | 2  | QUAKECRAFT     | Quake         | Quake                |  | 3  | WALLS          | Walls         | Walls                |  | 4  | PAINTBALL      | Paintball     | Paintball            |  | 5  | SURVIVAL_GAMES | HungerGames   | Blitz Survival Games |  | 6  | TNTGAMES       | TNTGames      | TNT Games            |  | 7  | VAMPIREZ       | VampireZ      | VampireZ             |  | 13 | WALLS3         | Walls3        | Mega Walls           |  | 14 | ARCADE         | Arcade        | Arcade               |  | 17 | ARENA          | Arena         | Arena                |  | 20 | UHC            | UHC           | UHC Champions        |  | 21 | MCGO           | MCGO          | Cops and Crims       |  | 23 | BATTLEGROUND   | Battleground  | Warlords             |  | 24 | SUPER_SMASH    | SuperSmash    | Smash Heroes         |  | 25 | GINGERBREAD    | GingerBread   | Turbo Kart Racers    |  | 26 | HOUSING        | Housing       | Housing              |  | 51 | SKYWARS        | SkyWars       | SkyWars              |  | 52 | TRUE_COMBAT    | TrueCombat    | Crazy Walls          |  | 54 | SPEED_UHC      | SpeedUHC      | Speed UHC            |  | 55 | SKYCLASH       | SkyClash      | SkyClash             |  | 56 | LEGACY         | Legacy        | Classic Games        |  | 57 | PROTOTYPE      | Prototype     | Prototype            |  | 58 | BEDWARS        | Bedwars       | Bed Wars             |  | 59 | MURDER_MYSTERY | MurderMystery | Murder Mystery       |  | 60 | BUILD_BATTLE   | BuildBattle   | Build Battle         |  | 61 | DUELS          | Duels         | Duels                |  | 63 | SKYBLOCK       | SkyBlock      | SkyBlock             |  | 64 | PIT            | Pit           | Pit                  |  | 65 | REPLAY         | Replay        | Replay               |  | 67 | SMP            | SMP           | SMP                  |  | 68 | WOOL_GAMES     | WoolGames     | Wool Wars            |  ### Storage Games store their respective stats and data in a Player\'s `stats` collection. The game\'s specific data is held within a JSON object named after it\'s `Database Name` (seen above.) ### GameType Notes * Clean names are what is displayed to the user when referencing the name. * Database names or IDs are used when the API references a specific GameType. ## Notes  ### Date and Time Generally dates are stored as a Unix Epoch times in milliseconds. ### Response Format Responses are served in JSON format. ### UUID Parameters All uuid parameters support both dashed and undashed versions. ### SkyBlock items and inventories Items and inventory data are stored as a base64 encoded string containing gzipped nbt data. If a method is missing important information about an item or inventory, you should try checking this! >Note: the base64 string may contain a unicode escape for non-alphabetical symbols, and some programming languages may have silent defects when interpreting the string.   # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PlayerGet400Response,
  PlayerGet403Response,
  PlayerGet429Response,
  RecentgamesGet422Response,
  ResourcesSkyblockBingoGet200Response,
  ResourcesSkyblockCollectionsGet200Response,
  ResourcesSkyblockElectionGet200Response,
  ResourcesSkyblockItemsGet200Response,
  ResourcesSkyblockSkillsGet200Response,
  SkyblockAuctionGet200Response,
  SkyblockAuctionsEndedGet200Response,
  SkyblockAuctionsGet200Response,
  SkyblockAuctionsGet404Response,
  SkyblockAuctionsGet422Response,
  SkyblockAuctionsGet503Response,
  SkyblockBazaarGet200Response,
  SkyblockBingoGet200Response,
  SkyblockBingoGet404Response,
  SkyblockFiresalesGet200Response,
  SkyblockMuseumGet200Response,
  SkyblockNewsGet200Response,
  SkyblockProfileGet200Response,
  SkyblockProfilesGet200Response,
} from '../models';
import {
    PlayerGet400ResponseFromJSON,
    PlayerGet400ResponseToJSON,
    PlayerGet403ResponseFromJSON,
    PlayerGet403ResponseToJSON,
    PlayerGet429ResponseFromJSON,
    PlayerGet429ResponseToJSON,
    RecentgamesGet422ResponseFromJSON,
    RecentgamesGet422ResponseToJSON,
    ResourcesSkyblockBingoGet200ResponseFromJSON,
    ResourcesSkyblockBingoGet200ResponseToJSON,
    ResourcesSkyblockCollectionsGet200ResponseFromJSON,
    ResourcesSkyblockCollectionsGet200ResponseToJSON,
    ResourcesSkyblockElectionGet200ResponseFromJSON,
    ResourcesSkyblockElectionGet200ResponseToJSON,
    ResourcesSkyblockItemsGet200ResponseFromJSON,
    ResourcesSkyblockItemsGet200ResponseToJSON,
    ResourcesSkyblockSkillsGet200ResponseFromJSON,
    ResourcesSkyblockSkillsGet200ResponseToJSON,
    SkyblockAuctionGet200ResponseFromJSON,
    SkyblockAuctionGet200ResponseToJSON,
    SkyblockAuctionsEndedGet200ResponseFromJSON,
    SkyblockAuctionsEndedGet200ResponseToJSON,
    SkyblockAuctionsGet200ResponseFromJSON,
    SkyblockAuctionsGet200ResponseToJSON,
    SkyblockAuctionsGet404ResponseFromJSON,
    SkyblockAuctionsGet404ResponseToJSON,
    SkyblockAuctionsGet422ResponseFromJSON,
    SkyblockAuctionsGet422ResponseToJSON,
    SkyblockAuctionsGet503ResponseFromJSON,
    SkyblockAuctionsGet503ResponseToJSON,
    SkyblockBazaarGet200ResponseFromJSON,
    SkyblockBazaarGet200ResponseToJSON,
    SkyblockBingoGet200ResponseFromJSON,
    SkyblockBingoGet200ResponseToJSON,
    SkyblockBingoGet404ResponseFromJSON,
    SkyblockBingoGet404ResponseToJSON,
    SkyblockFiresalesGet200ResponseFromJSON,
    SkyblockFiresalesGet200ResponseToJSON,
    SkyblockMuseumGet200ResponseFromJSON,
    SkyblockMuseumGet200ResponseToJSON,
    SkyblockNewsGet200ResponseFromJSON,
    SkyblockNewsGet200ResponseToJSON,
    SkyblockProfileGet200ResponseFromJSON,
    SkyblockProfileGet200ResponseToJSON,
    SkyblockProfilesGet200ResponseFromJSON,
    SkyblockProfilesGet200ResponseToJSON,
} from '../models';

export interface SkyblockAuctionGetRequest {
    uuid?: string;
    player?: string;
    profile?: string;
}

export interface SkyblockAuctionsGetRequest {
    page?: number;
}

export interface SkyblockBingoGetRequest {
    uuid?: string;
}

export interface SkyblockMuseumGetRequest {
    profile?: string;
}

export interface SkyblockProfileGetRequest {
    profile?: string;
}

export interface SkyblockProfilesGetRequest {
    uuid?: string;
}

/**
 * 
 */
export class SkyBlockApi extends runtime.BaseAPI {

    /**
     * Information regarding the current bingo event and its goals.
     * Active Bingo Goals
     */
    async resourcesSkyblockBingoGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResourcesSkyblockBingoGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/resources/skyblock/bingo`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResourcesSkyblockBingoGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Information regarding the current bingo event and its goals.
     * Active Bingo Goals
     */
    async resourcesSkyblockBingoGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResourcesSkyblockBingoGet200Response> {
        const response = await this.resourcesSkyblockBingoGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Information regarding Collections in the SkyBlock game.
     * Collections
     */
    async resourcesSkyblockCollectionsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResourcesSkyblockCollectionsGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/resources/skyblock/collections`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResourcesSkyblockCollectionsGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Information regarding Collections in the SkyBlock game.
     * Collections
     */
    async resourcesSkyblockCollectionsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResourcesSkyblockCollectionsGet200Response> {
        const response = await this.resourcesSkyblockCollectionsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Information regarding the current mayor and ongoing election in SkyBlock.
     * Election and Mayor
     */
    async resourcesSkyblockElectionGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResourcesSkyblockElectionGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/resources/skyblock/election`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResourcesSkyblockElectionGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Information regarding the current mayor and ongoing election in SkyBlock.
     * Election and Mayor
     */
    async resourcesSkyblockElectionGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResourcesSkyblockElectionGet200Response> {
        const response = await this.resourcesSkyblockElectionGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Information regarding items in the SkyBlock game.
     * Items
     */
    async resourcesSkyblockItemsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResourcesSkyblockItemsGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/resources/skyblock/items`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResourcesSkyblockItemsGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Information regarding items in the SkyBlock game.
     * Items
     */
    async resourcesSkyblockItemsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResourcesSkyblockItemsGet200Response> {
        const response = await this.resourcesSkyblockItemsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Information regarding skills in the SkyBlock game.
     * Skills
     */
    async resourcesSkyblockSkillsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ResourcesSkyblockSkillsGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/resources/skyblock/skills`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ResourcesSkyblockSkillsGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Information regarding skills in the SkyBlock game.
     * Skills
     */
    async resourcesSkyblockSkillsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ResourcesSkyblockSkillsGet200Response> {
        const response = await this.resourcesSkyblockSkillsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Request auction(s) by the auction UUID, player UUID, or profile UUID.
     */
    async skyblockAuctionGetRaw(requestParameters: SkyblockAuctionGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SkyblockAuctionGet200Response>> {
        const queryParameters: any = {};

        if (requestParameters.uuid !== undefined) {
            queryParameters['uuid'] = requestParameters.uuid;
        }

        if (requestParameters.player !== undefined) {
            queryParameters['player'] = requestParameters.player;
        }

        if (requestParameters.profile !== undefined) {
            queryParameters['profile'] = requestParameters.profile;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["API-Key"] = this.configuration.apiKey("API-Key"); // ApiKey authentication
        }

        const response = await this.request({
            path: `/skyblock/auction`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SkyblockAuctionGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Request auction(s) by the auction UUID, player UUID, or profile UUID.
     */
    async skyblockAuctionGet(requestParameters: SkyblockAuctionGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SkyblockAuctionGet200Response> {
        const response = await this.skyblockAuctionGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * SkyBlock auctions which ended in the last 60 seconds.
     * Recently ended auctions
     */
    async skyblockAuctionsEndedGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SkyblockAuctionsEndedGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/skyblock/auctions_ended`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SkyblockAuctionsEndedGet200ResponseFromJSON(jsonValue));
    }

    /**
     * SkyBlock auctions which ended in the last 60 seconds.
     * Recently ended auctions
     */
    async skyblockAuctionsEndedGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SkyblockAuctionsEndedGet200Response> {
        const response = await this.skyblockAuctionsEndedGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Returns the currently active auctions sorted by last updated first and paginated.
     * Active auctions
     */
    async skyblockAuctionsGetRaw(requestParameters: SkyblockAuctionsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SkyblockAuctionsGet200Response>> {
        const queryParameters: any = {};

        if (requestParameters.page !== undefined) {
            queryParameters['page'] = requestParameters.page;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/skyblock/auctions`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SkyblockAuctionsGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns the currently active auctions sorted by last updated first and paginated.
     * Active auctions
     */
    async skyblockAuctionsGet(requestParameters: SkyblockAuctionsGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SkyblockAuctionsGet200Response> {
        const response = await this.skyblockAuctionsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns the list of products along with their sell summary, buy summary and quick status.  ### Product Description  The returned product info has 3 main fields:  - `buy_summary`  - `sell_summary`  - `quick_status`  `buy_summary` and `sell_summary` are the current top 30 orders for each transaction type (in-game example: [Stock of Stonks](https://i.imgur.com/SjRONxq.png)).  `quick_status` is a computed summary of the live state of the product (used for advanced mode view in the bazaar): - `sellVolume` and `buyVolume` are the sum of item amounts in all orders.  - `sellPrice` and `buyPrice` are the weighted average of the top 2% of orders by volume.  - `movingWeek` is the historic transacted volume from last 7d + live state.  - `sellOrders` and `buyOrders` are the count of active orders. 
     * Bazaar
     */
    async skyblockBazaarGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SkyblockBazaarGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/skyblock/bazaar`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SkyblockBazaarGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Returns the list of products along with their sell summary, buy summary and quick status.  ### Product Description  The returned product info has 3 main fields:  - `buy_summary`  - `sell_summary`  - `quick_status`  `buy_summary` and `sell_summary` are the current top 30 orders for each transaction type (in-game example: [Stock of Stonks](https://i.imgur.com/SjRONxq.png)).  `quick_status` is a computed summary of the live state of the product (used for advanced mode view in the bazaar): - `sellVolume` and `buyVolume` are the sum of item amounts in all orders.  - `sellPrice` and `buyPrice` are the weighted average of the top 2% of orders by volume.  - `movingWeek` is the historic transacted volume from last 7d + live state.  - `sellOrders` and `buyOrders` are the count of active orders. 
     * Bazaar
     */
    async skyblockBazaarGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SkyblockBazaarGet200Response> {
        const response = await this.skyblockBazaarGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * Bingo data for participated events of the provided player.
     * Bingo data by player
     */
    async skyblockBingoGetRaw(requestParameters: SkyblockBingoGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SkyblockBingoGet200Response>> {
        const queryParameters: any = {};

        if (requestParameters.uuid !== undefined) {
            queryParameters['uuid'] = requestParameters.uuid;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["API-Key"] = this.configuration.apiKey("API-Key"); // ApiKey authentication
        }

        const response = await this.request({
            path: `/skyblock/bingo`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SkyblockBingoGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Bingo data for participated events of the provided player.
     * Bingo data by player
     */
    async skyblockBingoGet(requestParameters: SkyblockBingoGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SkyblockBingoGet200Response> {
        const response = await this.skyblockBingoGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieve the currently active or upcoming Fire Sales for SkyBlock.
     * Active/Upcoming Fire Sales
     */
    async skyblockFiresalesGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SkyblockFiresalesGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/skyblock/firesales`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SkyblockFiresalesGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Retrieve the currently active or upcoming Fire Sales for SkyBlock.
     * Active/Upcoming Fire Sales
     */
    async skyblockFiresalesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SkyblockFiresalesGet200Response> {
        const response = await this.skyblockFiresalesGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * SkyBlock museum data for all members of the provided profile. The data returned can differ depending on the players in-game API settings.
     * Museum data by profile ID
     */
    async skyblockMuseumGetRaw(requestParameters: SkyblockMuseumGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SkyblockMuseumGet200Response>> {
        const queryParameters: any = {};

        if (requestParameters.profile !== undefined) {
            queryParameters['profile'] = requestParameters.profile;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["API-Key"] = this.configuration.apiKey("API-Key"); // ApiKey authentication
        }

        const response = await this.request({
            path: `/skyblock/museum`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SkyblockMuseumGet200ResponseFromJSON(jsonValue));
    }

    /**
     * SkyBlock museum data for all members of the provided profile. The data returned can differ depending on the players in-game API settings.
     * Museum data by profile ID
     */
    async skyblockMuseumGet(requestParameters: SkyblockMuseumGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SkyblockMuseumGet200Response> {
        const response = await this.skyblockMuseumGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * News
     */
    async skyblockNewsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SkyblockNewsGet200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["API-Key"] = this.configuration.apiKey("API-Key"); // ApiKey authentication
        }

        const response = await this.request({
            path: `/skyblock/news`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SkyblockNewsGet200ResponseFromJSON(jsonValue));
    }

    /**
     * News
     */
    async skyblockNewsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SkyblockNewsGet200Response> {
        const response = await this.skyblockNewsGetRaw(initOverrides);
        return await response.value();
    }

    /**
     * SkyBlock profile data, such as stats, objectives etc. The data returned can differ depending on the players in-game API settings.
     * Profile by UUID
     */
    async skyblockProfileGetRaw(requestParameters: SkyblockProfileGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SkyblockProfileGet200Response>> {
        const queryParameters: any = {};

        if (requestParameters.profile !== undefined) {
            queryParameters['profile'] = requestParameters.profile;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["API-Key"] = this.configuration.apiKey("API-Key"); // ApiKey authentication
        }

        const response = await this.request({
            path: `/skyblock/profile`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SkyblockProfileGet200ResponseFromJSON(jsonValue));
    }

    /**
     * SkyBlock profile data, such as stats, objectives etc. The data returned can differ depending on the players in-game API settings.
     * Profile by UUID
     */
    async skyblockProfileGet(requestParameters: SkyblockProfileGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SkyblockProfileGet200Response> {
        const response = await this.skyblockProfileGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Profiles by player
     */
    async skyblockProfilesGetRaw(requestParameters: SkyblockProfilesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SkyblockProfilesGet200Response>> {
        const queryParameters: any = {};

        if (requestParameters.uuid !== undefined) {
            queryParameters['uuid'] = requestParameters.uuid;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["API-Key"] = this.configuration.apiKey("API-Key"); // ApiKey authentication
        }

        const response = await this.request({
            path: `/skyblock/profiles`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SkyblockProfilesGet200ResponseFromJSON(jsonValue));
    }

    /**
     * Profiles by player
     */
    async skyblockProfilesGet(requestParameters: SkyblockProfilesGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SkyblockProfilesGet200Response> {
        const response = await this.skyblockProfilesGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
